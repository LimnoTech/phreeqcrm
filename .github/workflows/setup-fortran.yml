name: setup-fortran

on:
  push:
    branches:
      - setup-fortran

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-12, windows-2022]
        toolchain:
          - {compiler: gcc, version: 9}
          - {compiler: gcc, version: 13}
          - {compiler: intel, version: '2023.2'}
          - {compiler: intel-classic, version: '2021.10'}
        include:
          - os: macos-12
            toolchain: {compiler: gcc, version: 10}
        exclude:
          - os: macos-12
            toolchain: {compiler: intel}
          - os: macos-12
            toolchain: {compiler: gcc, version: 9}
          - os: windows-2022
            toolchain: {compiler: gcc}

    steps:
      - uses: fortran-lang/setup-fortran@v1.3
        id: setup-fortran
        with:
          compiler: ${{ matrix.toolchain.compiler }}
          version: ${{ matrix.toolchain.version }}

      - run: ${{ env.FC }} /QV
        if: ${{ contains(matrix.toolchain.compiler, 'intel') && runner.os == 'Windows' }}
        env:
          FC: ${{ steps.setup-fortran.outputs.fc }}

      - run: ${{ env.FC }} --version
        if: ${{ !(contains(matrix.toolchain.compiler, 'intel') && runner.os == 'Windows') }}
        env:
          FC: ${{ steps.setup-fortran.outputs.fc }}

      - run: sudo apt-get -y update && sudo apt-get install -y ninja-build
        if: ${{ runner.os == 'Linux' }}

      - run: brew install ninja
        if: ${{ runner.os == 'macOS' }}

      - uses: actions/checkout@v3

      - run: cmake -B setup-fortran/build -S setup-fortran -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release

      - run: cmake --build setup-fortran/build

      - run: ctest --output-on-failure --test-dir setup-fortran/build

      - run: cmake -B setup-fortran/openmp/build -S setup-fortran/openmp -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release

      - run: cmake --build setup-fortran/openmp/build

      - run: ctest --output-on-failure --test-dir setup-fortran/openmp/build
